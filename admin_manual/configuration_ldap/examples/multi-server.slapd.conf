//Global Directives:
//Schema and objectClass definitions
include         /etc/ldap/schema/core.schema
include         /etc/ldap/schema/cosine.schema
include         /etc/ldap/schema/nis.schema
include         /etc/ldap/schema/inetorgperson.schema

//Where the pid file is put. The init.d script
//will not stop the server if you change this.
pidfile         /var/run/slapd/slapd.pid

//List of arguments that were passed to the server
argsfile        /var/run/slapd/slapd.args

//Read slapd.conf(5) for possible values
loglevel        any

//Where the dynamically loaded modules are stored
modulepath      /usr/lib/ldap
moduleload      rwm
moduleload      pcache.la
moduleload      back_ldap.la
moduleload      back_meta.la
moduleload      back_hdb.la

//The maximum number of entries that is returned for a search operation
sizelimit       500

//The tool-threads parameter sets the actual amount of cpu's that is used
//for indexing
tool-threads    1

//Specific Directives for database #1
//In our case, it's the local LDAP database where the 
//cached information is stored
//First the database type. We need meta, for LDAP and AD services
database        meta

//The base of your directory in database #1
//Here, we create a new domain. For example "dc=example,dc=com"
suffix          "dc=example,dc=com"

//rootdn. To access our new created domain, we need do create a root user or admin
//and set a password.
//rootdn          "cn=admin,SUFFIX"
rootdn          "cn=admin,dc=example,dc=com"
rootpw          "password for admin"

//First AD configuration
//You habe to enter your AD's url or ip and the port, 389 or 636. 
//Then you have to enter your base DN, where you want to access in the first AD.
uri             "ldap://URL_OR_IP:389/cn=users,dc=first,dc=ad,dc=com"

//Then you have to create a "virtual" branch in your new created domain
//and point it to the real brach of your first AD
suffixmassage   "dc=ad,dc=example,dc=com" "cn=users,dc=first,dc=ad,dc=com"
//Here you enter the user credentials of your first AD
idasssert-bind  bindmethod=simple
                binddn="cn=testUser,cn=users,dc=first,dc=ad,dc=com"
                credentials="Password"
//the same for the second AD
uri             "ldap://URL_OR_IP:389/cn=users,dc=second,dc=ad,dc=com"
suffixmassage   "dc=ad_second,dc=example,dc=com" "cn=users,dc=second,dc=ad,dc=com"
idasssert-bind  bindmethod=simple
                binddn="cn=testUser,cn=users,dc=second,dc=ad,dc=com"
                credentials="Password"
//Then you set the caching
//The overlay is called pcache, and you have to load it above.
overlay         pcache
//hdb is the database type
//pcache <database> <max_entries> <numattrsets> <entry_limit> <cc_period>
pcache          hdb 100000 1 1000 100
//pcacheAttrset <index> <attrs...>
pcacheAttrset   0 *
//0= Indexnumber, *=cache all attributes. you can write "name" then the filter name will be cached
//every search with the filter sn and the filter in the index 0 is cached for 1 h
//pcacheTemplate <template_string> <attrset_index> <ttl> [<negttl> [<limitttl> [<ttr>]]]
pcacheTemplate  (sn=) 0 3600
//every search with the cn filter is cached for 1 h
pcacheTemplate  (cn=) 0 3600
//pcachePersist { TRUE | FALSE } , save cached queries when restarting the server
pcachePersist   TRUE
# Where the database file are physically stored for database #1
directory       "/var/lib/ldap"
